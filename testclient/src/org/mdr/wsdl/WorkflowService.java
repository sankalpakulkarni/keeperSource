
package org.mdr.wsdl;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "WorkflowService", targetNamespace = "http://mdr.org/wsdl")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WorkflowService {


    /**
     * 
     * @param arg0
     * @throws RepositoryException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "approveProcedure", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.ApproveProcedure")
    @ResponseWrapper(localName = "approveProcedureResponse", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.ApproveProcedureResponse")
    public void approveProcedure(
        @WebParam(name = "arg0", targetNamespace = "")
        Long arg0)
        throws RepositoryException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws RepositoryAuthenticationException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "denyActorRequest", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.DenyActorRequest")
    @ResponseWrapper(localName = "denyActorRequestResponse", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.DenyActorRequestResponse")
    public void denyActorRequest(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws RepositoryAuthenticationException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws RepositoryException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "requestAccreditActor", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.RequestAccreditActor")
    @ResponseWrapper(localName = "requestAccreditActorResponse", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.RequestAccreditActorResponse")
    public String requestAccreditActor(
        @WebParam(name = "arg0", targetNamespace = "")
        Contact arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws RepositoryException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws RepositoryException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "rejectProcedure", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.RejectProcedure")
    @ResponseWrapper(localName = "rejectProcedureResponse", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.RejectProcedureResponse")
    public void rejectProcedure(
        @WebParam(name = "arg0", targetNamespace = "")
        Long arg0)
        throws RepositoryException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws RepositoryException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "requestAccreditRegistrar", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.RequestAccreditRegistrar")
    @ResponseWrapper(localName = "requestAccreditRegistrarResponse", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.RequestAccreditRegistrarResponse")
    public String requestAccreditRegistrar(
        @WebParam(name = "arg0", targetNamespace = "")
        Registrar arg0)
        throws RepositoryException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws RepositoryAuthenticationException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "approveActorRequest", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.ApproveActorRequest")
    @ResponseWrapper(localName = "approveActorRequestResponse", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.ApproveActorRequestResponse")
    public void approveActorRequest(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws RepositoryAuthenticationException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws RepositoryException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "submitFormTask", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.SubmitFormTask")
    @ResponseWrapper(localName = "submitFormTaskResponse", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.SubmitFormTaskResponse")
    public void submitFormTask(
        @WebParam(name = "arg0", targetNamespace = "")
        long arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        List<VariableValue> arg1)
        throws RepositoryException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws RepositoryException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "denyActorRegistration", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.DenyActorRegistration")
    @ResponseWrapper(localName = "denyActorRegistrationResponse", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.DenyActorRegistrationResponse")
    public void denyActorRegistration(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws RepositoryException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPendingActorRegistrationDecisions", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.GetPendingActorRegistrationDecisions")
    @ResponseWrapper(localName = "getPendingActorRegistrationDecisionsResponse", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.GetPendingActorRegistrationDecisionsResponse")
    public List<String> getPendingActorRegistrationDecisions();

    /**
     * 
     * @return
     *     returns org.mdr.wsdl.TaskInstanceList
     * @throws RepositoryException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserForms", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.GetUserForms")
    @ResponseWrapper(localName = "getUserFormsResponse", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.GetUserFormsResponse")
    public TaskInstanceList getUserForms()
        throws RepositoryException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns org.mdr.wsdl.Procedure
     * @throws RepositoryException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getLatestActiveProcedure", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.GetLatestActiveProcedure")
    @ResponseWrapper(localName = "getLatestActiveProcedureResponse", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.GetLatestActiveProcedureResponse")
    public Procedure getLatestActiveProcedure(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws RepositoryException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<org.mdr.wsdl.Procedure>
     * @throws RepositoryException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProcedures", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.GetProcedures")
    @ResponseWrapper(localName = "getProceduresResponse", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.GetProceduresResponse")
    public List<Procedure> getProcedures(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws RepositoryException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.Long
     * @throws RepositoryException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createProcedure", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.CreateProcedure")
    @ResponseWrapper(localName = "createProcedureResponse", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.CreateProcedureResponse")
    public Long createProcedure(
        @WebParam(name = "arg0", targetNamespace = "")
        Procedure arg0)
        throws RepositoryException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws RepositoryException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "approveActorRegistration", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.ApproveActorRegistration")
    @ResponseWrapper(localName = "approveActorRegistrationResponse", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.ApproveActorRegistrationResponse")
    public void approveActorRegistration(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws RepositoryException_Exception
    ;

    /**
     * 
     * @return
     *     returns org.mdr.wsdl.MdrProcess
     * @throws RepositoryException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "defaultProcess", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.DefaultProcess")
    @ResponseWrapper(localName = "defaultProcessResponse", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.DefaultProcessResponse")
    public MdrProcess defaultProcess()
        throws RepositoryException_Exception
    ;

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "createApprovalProcessDefinition", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.CreateApprovalProcessDefinition")
    @ResponseWrapper(localName = "createApprovalProcessDefinitionResponse", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.CreateApprovalProcessDefinitionResponse")
    public void createApprovalProcessDefinition();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "inquireActorRegistrationStatus", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.InquireActorRegistrationStatus")
    @ResponseWrapper(localName = "inquireActorRegistrationStatusResponse", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.InquireActorRegistrationStatusResponse")
    public String inquireActorRegistrationStatus(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRequestDetails", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.GetRequestDetails")
    @ResponseWrapper(localName = "getRequestDetailsResponse", targetNamespace = "http://mdr.org/wsdl", className = "org.mdr.wsdl.GetRequestDetailsResponse")
    public String getRequestDetails(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
